package tema1_dulau_marius;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class GUI extends JFrame{

	private JPanel panel = new JPanel();
	private JPanel panelOperatii = new JPanel();
	private JPanel panelPolinoame = new JPanel();
	
	private JButton salvareDate = new JButton("Salveaza datele");
	private JButton adunare = new JButton("Adunare");
	private JButton scadere = new JButton("Scadere");
	private JButton inmultire = new JButton("Inmultire");
	private JButton impartire = new JButton("Impartire");
	private JButton derivare = new JButton("Derivare");
	private JButton integrare = new JButton("Integrare");
	
	private JLabel lbP = new JLabel("f  = ");
	private JTextField tfP = new JTextField();
	
	private JLabel lbQ = new JLabel("g  = ");
	private JTextField tfQ = new JTextField();
	
	private JLabel lbR = new JLabel("h  = ");
	private JTextField tfR = new JTextField();
	
	private Polinom polinomF = new Polinom();
	private Polinom polinomG = new Polinom();
	private Polinom polinomH = new Polinom();
	private Polinom polinomR = new Polinom();
	
	private String p, q = null;
	private String[] valP, valQ;
	
	public GUI(String nume)
	{
		super(nume);
		panel.setLayout(null);
		
		panelPolinoame.setBounds(20, 10, 530, 100);
		panelPolinoame.setLayout(null);
		
		lbP.setBounds(0, 10, 40, 15);
		lbQ.setBounds(0, 45, 40, 15);
		lbR.setBounds(0, 80, 40, 15);
		
		tfP.setBounds(50, 8, 480, 20);
		tfQ.setBounds(50, 43, 480, 20);
		tfR.setBounds(50, 78, 480, 20);
		
		panelPolinoame.add(lbP);
		panelPolinoame.add(lbQ);
		panelPolinoame.add(lbR);
		panelPolinoame.add(tfP);
		panelPolinoame.add(tfQ);
		panelPolinoame.add(tfR);
		panelPolinoame.setBackground(new Color(0, 0, 0, 0));
		panel.add(panelPolinoame);
		
		for(Component c: panelPolinoame.getComponents())
		{
			if(c instanceof JLabel)
			{
				c.setForeground(Color.WHITE);
			}
		}
		
		panelOperatii.setLayout(null);
		panelOperatii.setBounds(20, 140, 530, 60);
		
		salvareDate.setBounds(0, 0, 125, 60);
		adunare.setBounds(135, 0, 125, 25);
		scadere.setBounds(135, 35, 125, 25);
		inmultire.setBounds(270, 0, 125, 25);
		impartire.setBounds(270, 35, 125, 25);
		derivare.setBounds(405, 0, 125, 25);
		integrare.setBounds(405, 35, 125, 25);
		
		salvareDate.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e)
			{
				p = tfP.getText();
				q = tfQ.getText();
				
				p = p.replaceAll("-", "+-"); //inlocuim - cu +- pentru a avea semnul negativ la numere
				p = p.replaceAll("\\s+", ""); // eliminam spatiile ca sa putem desparti mai usor
				q = q.replace("-", "+-");
				q = q.replaceAll("\\s+", "");
				
				valP = p.split("[+]"); //despartim in string dupa +
				valQ = q.split("[+]");
				
				try
				{
					polinomP = new Logic().construirePolinom(valP);
					polinomP.sortare();
					polinomP.eliminareGradeMultiple();
					polinomQ = new Logic().construirePolinom(valQ);
					polinomQ.sortare();
					polinomQ.eliminareGradeMultiple();
				}
				catch(MyException ex)
				{
					JOptionPane.showMessageDialog(null, ex);
				}
			}
		});
		
		adunare.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e)
			{
				polinomR = polinomP.adunaCu(polinomQ);
				String mesaj = polinomR.afisare();
				if(mesaj.compareTo("") == 0) tfR.setText("0"); 
				else tfR.setText(mesaj);
			}
		});
		
		scadere.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e)
			{
				Object[] stringArray = {"P - Q", "Q - P"};
				int rezultat = JOptionPane.showOptionDialog(panel, "Alegeti scaderea de efectuat.", null, JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, stringArray, stringArray[0]);
				
				if(rezultat == 0) polinomR = polinomP.scadeCu(polinomQ);
				else polinomR = polinomQ.scadeCu(polinomP);
				
				String mesaj = polinomR.afisare();
				if(mesaj.compareTo("") == 0) tfR.setText("0"); 
				else tfR.setText(mesaj);
			}
		});
		
		inmultire.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e)
			{
				polinomR = polinomP.inmultesteCu(polinomQ);
				
				String mesaj = polinomR.afisare();
				if(mesaj.compareTo("") == 0) tfR.setText("0"); 
				else tfR.setText(mesaj);
			}
		});
		
		impartire.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e)
			{
				Object[] stringArray = {"P / Q", "Q / P"};
				int rezultat = JOptionPane.showOptionDialog(panel, "Alegeti impartirea de efectuat.", null, JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, stringArray, stringArray[0]);
				
				if(rezultat == 0) polinomR = polinomP.imparteCu(polinomQ);
				else polinomR = polinomQ.imparteCu(polinomP);
				
				String mesaj = polinomR.afisare();
				if(mesaj.compareTo("") == 0) tfR.setText("0"); 
				else tfR.setText(mesaj);
			}
		});
		
		derivare.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e)
			{
				Object[] stringArray = {"P", "Q"};
				int rezultat = JOptionPane.showOptionDialog(panel, "Alegeti polinomul de derivat.", null, JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, stringArray, stringArray[0]);
				
				if(rezultat == 0) polinomR = polinomP.deriveaza();
				else polinomR = polinomQ.deriveaza();
				
				String mesaj = polinomR.afisare();
				if(mesaj.compareTo("") == 0) tfR.setText("0"); 
				else tfR.setText(mesaj);
			}
		});
		
		integrare.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e)
			{
				Object[] stringArray = {"P", "Q"};
				int rezultat = JOptionPane.showOptionDialog(panel, "Alegeti polinomul de integrat.", null, JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, stringArray, stringArray[0]);
				
				if(rezultat == 0) polinomR = polinomP.integreaza();
				else polinomR = polinomQ.integreaza();
				
				String mesaj = polinomR.afisare();
				if(mesaj.compareTo("") == 0) tfR.setText("0"); 
				else tfR.setText(mesaj);
			}
		});
		
		panelOperatii.add(salvareDate);
		panelOperatii.add(adunare);
		panelOperatii.add(scadere);
		panelOperatii.add(inmultire);
		panelOperatii.add(impartire);
		panelOperatii.add(derivare);
		panelOperatii.add(integrare);
		panelOperatii.setBackground(new Color(0, 0, 0, 0));
		
		for(Component c: panelOperatii.getComponents())
		{
			if(c instanceof JButton)
			{
				c.setBackground(Color.WHITE);
				c.setCursor(new Cursor(Cursor.HAND_CURSOR));
			}
		}
		
		panel.add(panelOperatii);
		panel.setBackground(new Color(0, 150, 255));
		
		this.add(panel);
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		JFrame frame = new GUI("Calculator polinoame");
		frame.setDefaultCloseOperation(EXIT_ON_CLOSE);
		frame.setSize(570, 250);
		frame.setResizable(false);
		frame.setVisible(true);
	}

}