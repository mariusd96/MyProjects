package tema2_dulau_marius;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.border.EmptyBorder;

public class SimulationFrame extends JFrame {

	private static int WIDTH = 700, HEIGHT = 350;
	private JPanel panel = new JPanel();
	private JPanel meniu = new JPanel();
	private JPanel panelSimulare = new JPanel();
	private JPanel animatie = new JPanel();
	
	private JTextField nrMaxServere = new JTextField();
	JLabel labelNrServere = new JLabel("Numar servere");
	
	private JTextField nrMaxClienti = new JTextField();
	JLabel labelNrClienti = new JLabel("Numar clienti");
	
	private JTextField timp = new JTextField();
	JLabel labelTimp = new JLabel("Timp");
	
	private JComboBox optiuni = new JComboBox();
	JLabel labelOptiuni = new JLabel("Optiuni");
	
	private JButton start = new JButton("Start");
	private JSeparator separator = new JSeparator();
	
	private JLabel countTime = new JLabel("Timp");
	private JScrollPane scrollPane;
	
	private int nrCozi;
	private int nrClienti;
	private int timpLimita;
	
	private void constrGUI()
	{
		meniu.setBounds(0, 0, 240, 350);
		meniu.setLayout(null);
		
		labelNrServere.setBounds(20, 20, 90, 20);
		nrMaxServere.setBounds(120, 20, 100, 20);
		labelNrClienti.setBounds(20, 50, 90, 20);
		nrMaxClienti.setBounds(120, 50, 100, 20);
		labelTimp.setBounds(20, 80, 90, 20);
		timp.setBounds(120, 80, 100, 20);
		labelOptiuni.setBounds(20, 110, 90, 20);
		optiuni.setBounds(120, 110, 100, 20);
		optiuni.addItem("Timp putin");
		optiuni.addItem("Cozi scurte");
		start.setBounds(20, 260, 200, 40);
		
		start.setBackground(Color.BLUE);
		start.setForeground(Color.WHITE);
		start.setCursor(new Cursor(Cursor.HAND_CURSOR));
		start.setFont(new Font("Times New Roman", Font.PLAIN, 14));
		
		meniu.add(labelNrServere);
		meniu.add(nrMaxServere);
		meniu.add(labelNrClienti);
		meniu.add(nrMaxClienti);
		meniu.add(timp);
		meniu.add(labelTimp);
		meniu.add(optiuni);
		meniu.add(labelOptiuni);
		meniu.add(start);		
		
		panelSimulare.setLayout(null);
		panelSimulare.setBounds(245, 0, 455, 350);
		countTime.setBounds(400, 10, 50, 20);
		panelSimulare.add(countTime);
		animatie.setLayout(null);
		animatie.setPreferredSize(new Dimension(420, 260));
		//animatie.setBounds(0, 40, 445, 270);
		//panelSimulare.add(animatie);
		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 40, 445, 270);
		scrollPane.setViewportBorder(null);
		scrollPane.setViewportView(animatie);
		panelSimulare.add(scrollPane);
		
		/*start.addActionListener(new ActionListener(){
			
				public void actionPerformed(ActionEvent e)
				{
					try
					{
						nrCozi = Integer.parseInt(nrMaxServere.getText());
						nrClienti = Integer.parseInt(nrMaxClienti.getText());
						timpLimita = Integer.parseInt(timp.getText());
						
						animatie.removeAll();
						
						JTextField[] tf = new JTextField[nrCozi];
						JLabel[] lbl = new JLabel[nrCozi];
						int y = 10;
					
						for(int i = 0; i < nrCozi; i++)
						{
							lbl[i] = new JLabel();
							lbl[i].setBounds(20, y, 60, 20);
							lbl[i].setBackground(Color.CYAN);
							lbl[i].setText("Coada " + String.valueOf((i + 1)));
							tf[i] = new JTextField();
							tf[i].setBounds(100, y, 300, 20);
							tf[i].setText(" ");
							tf[i].setName("tf" + String.valueOf(i + 1));
							y += 30;
							lbl[i].setLabelFor(tf[i]);
							animatie.add(lbl[i]);
							animatie.add(tf[i]);
						}
						
						animatie.setPreferredSize(new Dimension(420, nrCozi * 30 + 20));
						animatie.revalidate();
						animatie.repaint();
					}catch(Exception ex)
					{
						JOptionPane.showMessageDialog(null, "Introduceti date in toate casetele de text");
					}
				}
			}
		);*/
	}
	
	public SimulationFrame(String nume)
	{
		super(nume);
		this.setSize(WIDTH, HEIGHT);
		this.setDefaultCloseOperation(EXIT_ON_CLOSE);
		this.setResizable(false);
		this.setLocationRelativeTo(null);
		this.setVisible(true);
		
		constrGUI();
		panel.setLayout(null);
		panel.add(meniu);
		panel.add(panelSimulare);
		
		panel.add(separator);
		separator.setBounds(240, 10, 2, 300);
		separator.setBackground(Color.WHITE);
		separator.setOrientation(SwingConstants.VERTICAL);
		getContentPane().add(panel);
	}
	
	public void displayData(Task[][] tasks)
	{
		for(Component c: animatie.getComponents())
		{
			if(c instanceof JButton)
			{
				JOptionPane.showMessageDialog(null, c.getName());
			}
		}
	}
	
	int getNrServere()
	{
		return Integer.parseInt(nrMaxServere.getText());
	}
	
	int getNrClienti()
	{
		return Integer.parseInt(nrMaxClienti.getText());
	}
	
	int getTimp()
	{
		return Integer.parseInt(timp.getText());
	}
	
	void collectData(ActionListener cd)
	{
		start.addActionListener(cd);
	}
}
